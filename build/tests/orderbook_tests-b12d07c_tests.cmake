add_test( [==[Add: resting order goes to correct side and best price updates]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Add: resting order goes to correct side and best price updates]==]  )
set_tests_properties( [==[Add: resting order goes to correct side and best price updates]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[Crossing generates fills at maker prices with FIFO across levells]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Crossing generates fills at maker prices with FIFO across levells]==]  )
set_tests_properties( [==[Crossing generates fills at maker prices with FIFO across levells]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[Cancel removes resting order and empty level]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Cancel removes resting order and empty level]==]  )
set_tests_properties( [==[Cancel removes resting order and empty level]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[Partial Fill: taker < maker; maker stays in book with reduced size]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Partial Fill: taker < maker; maker stays in book with reduced size]==]  )
set_tests_properties( [==[Partial Fill: taker < maker; maker stays in book with reduced size]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[Partial fill: taker spans multiple makers; remaining stays in orderbook]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Partial fill: taker spans multiple makers; remaining stays in orderbook]==]  )
set_tests_properties( [==[Partial fill: taker spans multiple makers; remaining stays in orderbook]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[Full fill: maker and taker request same amount. Fill goes through. Both are gone.]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Full fill: maker and taker request same amount. Fill goes through. Both are gone.]==]  )
set_tests_properties( [==[Full fill: maker and taker request same amount. Fill goes through. Both are gone.]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[Cancel non-existent order id returns false and does nothing]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Cancel non-existent order id returns false and does nothing]==]  )
set_tests_properties( [==[Cancel non-existent order id returns false and does nothing]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[Cancel prev order removes level and updates best price]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Cancel prev order removes level and updates best price]==]  )
set_tests_properties( [==[Cancel prev order removes level and updates best price]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[Snapshot returns top n levels with summed qty]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[Snapshot returns top n levels with summed qty]==]  )
set_tests_properties( [==[Snapshot returns top n levels with summed qty]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[OrderIdGen is monotonic and unique]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[OrderIdGen is monotonic and unique]==]  )
set_tests_properties( [==[OrderIdGen is monotonic and unique]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
add_test( [==[csv logger writes header + rows]==] /Users/fglemu/Desktop/orderbook/build/tests/orderbook_tests [==[csv logger writes header + rows]==]  )
set_tests_properties( [==[csv logger writes header + rows]==] PROPERTIES WORKING_DIRECTORY /Users/fglemu/Desktop/orderbook/build/tests)
set( orderbook_tests_TESTS [==[Add: resting order goes to correct side and best price updates]==] [==[Crossing generates fills at maker prices with FIFO across levells]==] [==[Cancel removes resting order and empty level]==] [==[Partial Fill: taker < maker]==] [==[ maker stays in book with reduced size]==] [==[Partial fill: taker spans multiple makers]==] [==[ remaining stays in orderbook]==] [==[Full fill: maker and taker request same amount. Fill goes through. Both are gone.]==] [==[Cancel non-existent order id returns false and does nothing]==] [==[Cancel prev order removes level and updates best price]==] [==[Snapshot returns top n levels with summed qty]==] [==[OrderIdGen is monotonic and unique]==] [==[csv logger writes header + rows]==])
